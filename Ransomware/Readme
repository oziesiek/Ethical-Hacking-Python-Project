Ransomware Educational Project
Disclaimer: This project is purely educational and intended for learning purposes only. Unauthorized use of this software for malicious purposes is illegal and unethical. The authors of this project are not responsible for any damage caused by the misuse of this code.

Overview
This project is a Python-based educational ransomware simulation. It demonstrates how ransomware works in a controlled environment. It consists of three main components:

Ransomware Tool (ransomware.py): Encrypts files in a specified directory using Fernet symmetric encryption and RSA asymmetric encryption. Displays ransom notes and changes desktop background.

Fernet Key Decryption (Decrypt_fernet_key.py): Decrypts the Fernet key using the RSA private key, allowing the victim to decrypt their files after payment.

RSA Key Generator (RSA_key_generator.py): Generates RSA key pairs for encryption and decryption purposes.

Prerequisites
Python 3.x
Required Python packages can be installed using pip install -r requirements.txt
Usage
Step 1: Generate RSA Keys (Attacker)
Run RSA_key_generator.py to generate public (public.pem) and private (private.pem) RSA keys. These keys are necessary for encrypting and decrypting the Fernet symmetric key.

Step 2: Run Ransomware (Target)
Edit the paths in ransomware.py for the target directory (localRoot) and run the ransomware script.
Files in the specified directory will be encrypted, and a ransom note (RANSOM_NOTE.txt) will be created on the desktop.

Step 3: Decrypt Fernet Key (Attacker)
Run Decrypt_fernet_key.py to decrypt the Fernet key using the private RSA key. Place the EMAIL_ME.txt file (containing the encrypted Fernet key) on the victim's desktop to decrypt encrypted files.


Important Notes
DO NOT USE THIS CODE FOR MALICIOUS PURPOSES.
This project is designed for educational purposes and should be used responsibly and legally.
Be aware of legal regulations and ethical considerations related to cybersecurity and computer programming in your jurisdiction.
